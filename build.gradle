plugins {
    id 'java'
    id "io.qameta.allure" version "2.11.2"
}

group = 'com.punnyajoshi.Ecommerce'
version = '1.0.0'

repositories {
    mavenCentral()
}

def aspectJVersion = "1.9.20.1"

// Define configuration for AspectJ agent
configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {

    //Selenium
    implementation 'org.seleniumhq.selenium:selenium-java:4.19.1'
    testImplementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.19.1'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.8.0'


    //Google
    implementation 'com.google.code.gson:gson:2.8.9'


    //Lombok
    implementation 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    //TestNG
    testImplementation 'org.testng:testng:7.10.1'

    //Java Faker
    implementation 'com.github.javafaker:javafaker:1.0.2'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    //Allure
    // Import allure-bom to ensure correct versions of all the dependencies are used
    testImplementation platform("io.qameta.allure:allure-bom:2.24.0")
    agent "org.aspectj:aspectjweaver:$aspectJVersion"

    //Allure
    implementation "io.qameta.allure:allure-testng:2.24.0"
    implementation "org.aspectj:aspectjweaver:$aspectJVersion"

    //Assert J
    implementation 'org.assertj:assertj-core:3.25.3'

    //log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '3.0.0-beta2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '3.0.0-beta2'
}

task smokeTest(type: Test) {
    outputs.upToDateWhen { false }
    jvmArgs = ["-javaagent:${configurations.agent.singleFile}"]
    systemProperties System.properties
    useTestNG() {
        parallel = "methods"
        threadCount Integer.parseInt(System.getProperty("sessions", "2")); //max num of browser
        includeGroups System.getProperty("tags", "smoke")
        testLogging.showStandardStreams = true
        useDefaultListeners true
        //listeners << "com.ultralesson.qkwebmastery.listeners.ScreenshotListener"
        outputDirectory = file("$buildDir/" + System.getProperty('tags', 'smoke'))
    }
    testLogging {
        showExceptions = true
        events = ["passed", "failed", "skipped"]
    }
}


tasks.smokeTest.finalizedBy('allureReport')